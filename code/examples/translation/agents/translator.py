"""
An agent to translate the input text to a desired language.
"""
import asyncio
from dataclasses import dataclass
from typing import Optional

import logfire
from pydantic import BaseModel, Field
from pydantic_ai import Agent, RunContext
from utils.llm_model import LLMModel

from examples.translation.agents.language_detector import LanguageDetectorResult, agent as language_detector_agent

logfire.configure()

@dataclass
class TranslatorDependencies:
    """
    The dependencies needed by this agent.
    """
    input_language: str
    desired_language: str


class TranslatorResult(BaseModel):
    """
    The data model produced by this agent as the final result.
    """
    translated_text: str = Field(
        description='The translated output generated by this agent.',
    )

# create the agent
m = LLMModel()
m.model_type = 'groq'
m.groq_model_name = 'llama3-groq-70b-8192-tool-use-preview'

llm_model = m.fetch_model()

agent = Agent(
    llm_model,
    deps_type=TranslatorDependencies,
    result_type=TranslatorResult,
    system_prompt=(
        'You are a language translator. '
        'Your only job is to translate the input text given to you to the desired language. '
        'You should only output the translated text and nothing else. '
    ),
)

@agent.system_prompt
def add_desired_language(ctx: RunContext[TranslatorDependencies]) -> str:
    deps: TranslatorDependencies = ctx.deps
    prompt = (
        f'Translate the input text from {deps.input_language} to {deps.desired_language}. '
    )
    return prompt


async def main(input_text: str, input_language: str, desired_language: str) -> None:
    """
    The main function to execute to test this agent.
    """
    deps = TranslatorDependencies(
        input_language=input_language,
        desired_language=desired_language,
    )
    result = await agent.run(input_text, deps=deps)
    print(result.data)


if __name__ == '__main__':
    input_texts = [
        "The frog jumped out of the water and landed on the princess's lap.",
        "मेंढक पानी से बाहर कूद गया और राजकुमारी की गोद में आ बैठा।",
        "قفز الضفدع خارج الماء وحط في حضن الأميرة.",
        "ব্যাঙটি পানির বাইরে লাফিয়ে পড়ল এবং রাজকুমারীর কোলে গিয়ে পড়ল।",
        "Der Frosch sprang aus dem Wasser und landete auf dem Schoß der Prinzessin.",
    ]

    input_text: str = input_texts[4]
    input_language: str = 'German'
    desired_language: str = 'French'

    asyncio.run(
        main(input_text, input_language, desired_language),
    )
